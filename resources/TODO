OPTIONAL:
-push() method? (Rather not)
-language settings
-duplicate code in new lvl, open lvl, edit lvl?
-delete() method? (rather not)
-make traps trigger via pressure plates also?
-enemies not skeletons but enemy knights (no)? -> need to attack instead of walking into you? (maybe no sword necessary? yes or no?)
-isAlive() method
-CodeAreaController -> rework? (branch!)
-create a spellbook for Skeletons (steal() instead of collect?? attack?)
-TURN_DIRECTION enum: LEFT, RIGHT, AROUND
-tutorial GUI -> make user codearea smaller when tutorial is active??
-CodeEvaluator vs CodeExecutor?!
-very ugly things happen in controller!!!
-very ugly things happen in view concerning codeareas!!
-instead of ItemType null -> ItemType.NONE
-evaluateRandom is never used? Check if randoms are working properly
-CodeArea Nullpointer -> check this!
-(executeTurn() <- beacon does not work as of now! (Util.cloneStatement also clone Variables!) <- no?
-define own methods?? (Big!!)

IMPORTANT:
-----------------------------------
-build a prototype -> https://stackoverflow.com/questions/53453212/how-to-deploy-a-javafx-11-desktop-application-with-a-jre
-variable names restrict possible names?? (kinda already done...)
-add all VariableTypes enumerated in the enum
-Why is every assignment parsed twice?? (codeparser -> parseassignment sout -> twice in commandline)
-unlock statementtypes
-Status whether level is saved or if changes will be lost
-change RequiredLevellist from String to Levels to avoid confusion with what needs to be saved
    OR
    -reimplement saving mechanism? New class UnsavedData or similarly named
    OR
    -message upon saving: the following levels will be saved too, due to changes they are connected to
-changes as a class? to make saving better -> store in model also keep a change list

-wizard speech bubbles as tutorial gui?
-knight.getItemType() + knight.getDirection() + etc.
-optimize levels on automation
-select a level on each entering the editor?
-requiredlevels arent ordered in levelviewlist as in opening screen
-merge new variabletype functionality with regexes used elsewhere (Direction enum not needed anymore?)
-> figure out how to evaluate values of conditions and assignments!
-boulder -> barrel that can roll?
-changelog
-Knight give items
-Knight death "animation"
-Army army and Method army.executeIf(<Action>,<Condition>)
-fill spellbook slowly and also add all variables!
-how to display item currently carried?
-remove glowing background from sword etc
-menu after winning playmode -> back, replay or next level
-skeleton.attack() (no skeleton.move()!)
-skeleton cannot useItem()!
---------------------------------------------

DONE:

9.10.
Exit rework
Knight remove so much glow

6.10. - 8.10.
Exit needs more gold/shininess!
let gate have a flag that is purely visual? -> horizontal/vertical
codearea controller listens to view
gate make path as dark as other paths!
instead of removing the spawn redraw it without the glow

5.10.
tutorial opening screen if tutprogress == -1
endless loop -> popup and reset!
remove spawn when there are no knight tokens left

4.10.
end goal always to unlock the exit? <- the wizard wants to escape, not the knights! => no open tag!
knight icons left of map
button to load best code yet (with which you completed a specific level)
LevelOverviewPane: replace level descriptions with other information like max knights, level_size and requirements for certain star ratings!
Fullscreen mode
let randInt take variables!
data: tutorial progress
variable assignment causes nullpointer! + what if variables get variables as value (no recursion yet?)
CodeParser TestForCorrectValueType!

2.10.
variables must not be named LEFT, RIGHT, AROUND, EAST, WEST, NORTH, SOUTH, KEY
DIRECTION: NORTH, SOUTH, WEST, EAST
Booleans and Expressions -> find better solution! (merge the 2 so they work together!)
dropItem() method

1.10.
allow booleans with other value than true or false!
tutorialDeletion in view as a case!!
tutorialtext in level descriptions -> make editable! (tutorial textarea in texteditor but editable)
Back btn and others should be inactive when game is running!

27.09.
Make spellbook open on request and dont always show it!
find place for show spellbook button, tutorial textarea + forward and backwards buttons -> stackpane??
show tutorial levels exclusively in tutorial (??? maybe its okay to show in play scene?)
display Levelname in Playmode!
changing level name in editor -> extra button because name of file should be changed and the entry in data and requiredlevel also!!

26.09.
TODO:[might still be an issue]adjust to codeAreacontroller no longer "null"! Instead ask for isEmpty() [do controller and model search for null tests!]
make codefield scrollable! no 2 blocks!!
atm you cannot edit the intelligent codefield via clicks without have used arrow keys or enter etc. beforehand!

23.09.
Levelname in VBOX over level!
Spellbook field right of the map
Knight <variable name> = new Knight(<Direction>); <- tooltips
github

21.09.
see controller: Line 110 TODO???

19.09:
indexing
reload lvl btn? (why again?)
save player code upon finishing a level? -> store in data!
reset score for a level in editor
visualize knights left
update levellist of "Play" everytime? (because deleting in editor does not delete in "Play"!)