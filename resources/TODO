OPTIONAL:
-boulder -> barrel that can roll?
-push() method? (Rather not)
-delete() method? (rather not)
-make traps trigger via pressure plates also?
-isAlive() method
-CodeAreaController -> rework? (branch!)
-create a spellbook for Skeletons (steal() instead of collect?? attack?)
-tutorial GUI -> make user codearea smaller when tutorial is active??
-CodeEvaluator vs CodeExecutor?!
-very ugly things happen in controller!!!
-very ugly things happen in view concerning codeareas!!
-evaluateRandom is never used? Check if randoms are working properly
-CodeArea Nullpointer -> check this!
(-add getters for entities?)
(-from executeIf(a.canMove(),...,...) -> executeIf(canMove())??? because it is not in line with if(a.canMove())?? (BUT: a.canMove() == k1.canMove()) is valid in my opinion?!)

IMPORTANT:
-----------------------------------
-define own methods?? (Big!!)
- language settings
- duplicate code in new lvl, open lvl, edit lvl?
- add all VariableTypes enumerated in the enum
- Why is every assignment parsed twice?? (codeparser -> parseassignment sout -> twice in commandline)
- Status whether level is saved or if changes will be lost
-reimplement saving mechanism? New class UnsavedData or similarly named
    OR
-message upon saving: the following levels will be saved too, due to changes they are connected to
-changes as a class? to make saving better -> store in model also keep a change list

- optimize levels on automation
- requiredlevels arent ordered in levelviewlist as in opening screen
- merge new variabletype functionality with regexes used elsewhere (Direction enum not needed anymore?)
-> figure out how to evaluate values of conditions and assignments!
- newturns > turns but newlines < lines -> better? (not justifiable to give 2.5!)
- schleusen level with and without an inverted gate
- evil wizard explains level editor
- leveleditor open with a dialog whether to open a level or create a new one
- decide whether you should see animations if they dont do anything
- only have one levelEdited in model representing what was done to the level in the current editor -> changes will be lost upon opening another level! -> JSONParser.save(Changes)
- index bugged out -> might have to do with creating a new level and not saving it (maybe it was because I named it like the other level and it is case insensitive!!!!)
- also new levels are always added last instead of in between -> change together with saving system
- Enum for what data to retrieve from data.json! or save or delete
- Refactorings: no Direction enum, Use the allowedRegexes (instead of .matches(LEFT|RIGHT|...), evaluation of statements, Interface COndition is DUMB!
- Save only upon closing?? -> dynamic change system in model that is saved upon closing
- put all the evaluating from the codeexecutor to the codeevaluator?
- instead of unknown method it says variable not in scope
- make Introduction Pane transparent, show first level and highlight every part of the screen one after the other (code section, spellbook)
- create a clean event handling implementation!
- CodeAreaController Listens to CodeArea and sets the handlers everytime it changes
- Where to throw the error when COdeArea wrong? -> anyways when error change state of GamePane to "ErrorState" (Maybe there are also "PlayState" and "IdleState")
- Is CodeParser okay to be abstract? (why errors in parser and in evaluator??)
- control the amount of objects! (no need to create new codeAreas the whole time!!
- linked cell list is not lost upon changing content but cellid is!
- enemy parts in tutorial?
 controller btns -> codeareacontroller
 - Strg-S etc as abbreviations for opening, closing etc.
 - rethink required levels
 - add difficulty attribute
 - show difficulty and best result yet in selection mode!!!!!!!!
 - Save as option
 - cannot put empty or content when there wasnt a wall before...
 - check arguments of skeleton constructor whether they are viable...
 - replace the number argument with a color and give the spawns different colors?? (CFlag.RED,CFlag.VIOLET)
 - ! skells.canMove() doesnt work!!
 - only draw the map once in the beginning!
 - one step button einbauen
 - level editor mit passwort vor schülern schützen
 - alle escape sequenzen implementieren
 - be able to reset various aspects of data?
 - when starting game 7 or more levels are loaded! (is it maybe because of leveloverview pane?)
 - cheap graphics option? (disable smoothing)

 - execute one line at a time??
 - Level_1_... Levelname conventions
 - Required Levels entfernen?
 - Wenn möglich, die Zeilen etwas größer machen. Größere Fontsize für Code.
 - Buttons für das Entfernen und Hinzufügen von Zeilen an bestimmten Stellen wären super. ZB. ein rotes Kreuz bei allen Zeilen, die man gerade löschen kann.
 - Cursor ist bei Zeilen mit "}" nicht vorhanden, dh man sieht nicht, ob man gerade in dieser Zeile ist
 - Allgemein mehr Features für den Editor wie zB. Markieren oder Drag & Drop von Code-Zeilen wären sehr hilfreich.
 ==========================
 - allow XOR (^)?
 - EIGENE METHODEN
 - (Level, das randInt verwendet!)
 - Better Understand and clean up CodeParser
 - you can just put ; wherever and it will be removed
 - make controlElements ignore keyboard input?
 - back() Method?
 - Visitor-pattern to walk through complexstatements
 - jan: Wechsel auf FastAndFurious geht nicht (NEXT) und da geht auch LoadBestCode nicht!
 - EDITOR CONTROLLER 472
 - make view static
 - improve error message by e.g.: "for *(.*) *{" and "int [] = .+;.+;.+"
 - make CodeArea only 3 times avaiable!! and then store the scroll amounts respectively
 - decide what to do with custom methods!
 - rework how regexes are implemented + also question Enums like Direction! + make TestForCorrectParameters() in CodeParser obsolete -> TestForcorrectValueType
 - allow _ in variable Names?? HMMM
 - if compiler not active -> make all codefields editable? disable isError?
 - for(int i=0;i<5;int i) { is valid!! makie not valid!!!!
---------------------------------------------


DONE:
-> moving to changelog.txt
20.02.
mark line of executed Code!
CodeAreas are now scrollable per Mousewheel
Improved scrolling in general
Made Game pauseable!
Made Game speed changeable dynamically!
For more see changelog.txt
19.02.
tutorial text area in editor module now can only have as much text as can be displayed
created a README
removed image from repository as there is now a download link
18.02.
reworked SpeedSlider and Knob
made Spellbook movable
made Dialogs prettier
added Star Rating images
Empty Lines no longer count as loc
Made a few things prettier
Buttons now have effects
17.02.
hopefully fixed double escaping not working (\t\t -> "  \t")
also fixed highlights not in the right place
16.02.

 put tutorial section next to show spell book?!
 hide tutorial section if you want to!
actually a lot of progress but too lazy... -> look at commit-message
15.02.
can edit enemy code during play/tutorial
int i; says -> empty condition!!!
rearranged tutorial Wizard graphic
14.02.
drew Tutorial Wizard and various Buttons
added Brick-Background
added Border to ActualMapGPane

23.10.
adapt visuals to be relative instead of absolute!
skell.canMove() shouldnt be an allowed statement!
create zip!!
make all visible things relative

22.10.
fixed json parser to be able to handle escape symbols

16.10.
menu after winning playmode -> back, replay or next level
images for destroyed items etc.!
could also recolor the spawn and give knights differen colors... (too much work!!) -> maybe filter in java itself?
disabling execute btn when isError wasnt updated
!b -> a variable must not be named... fix this, also fix the code of the last stand level!

15.10.
add and update the tutorial edit section!
Strg UP or DOWN can move codefields up or DOWN, if it is allowed

14.10.
fill spellbook slowly and also add all variables!
readme with info (e.g. shift clicking in editor etc.)
empty level causes nullpointer if there is no spawn!
three brothers level

13.10.
can add same entity twice to army!
unlock statementtypes
fixed a bug where Command would not test executeIf for correctness

12.10.
instead of ItemType null -> ItemType.NONE
buggy codearea when holding down vs having to click twice to be able to execute -> Platform.runLater in CodeArea is issue and solution
knight.getItemType() + knight.getDirection() + etc.
maybe datatype Command? executeIf(<boolean>,<Command>,<Command>) or executeIf(<boolean>,<Command>,<Command>) and executeIf is also a Command?
scrolling is bad atm
adapt conditions to army? what is army allowed and what is it not?
items are still shown as clickable even if they shouldnt <- badly implemented!
attacking can destroy items? (but only if they are not boulders!
adding Scrollbar fucks up the layout
create a scrollbar class that has exactly 2 instances and stores 2 integers

11.10.
Army army and Method army.executeIf(<Action>,<Condition>)
multicell editing
executeIf Command for Knights,Skeletons as well as for armies -> 2 or 3 parameters + maybe doesnt count as 1 loc but as 3 or 5?

10.10.
skeleton cannot useItem()!
change action animation every second frame
keythief enemy lives after having been killed!!!
Gate is now only passable from the right direction!

9.10.
draw entities last? (multi cell images)
attack animations
adapt skeleton code to attack
variable names restrict possible names??
Knight give items
Knight death "animation"
remove glowing background from sword etc
how to display item currently carried?
skeleton.attack() (no skeleton.move()!)
exit open -> shiny exit!
Exit rework
Knight remove so much glow

6.10. - 8.10.
Exit needs more gold/shininess!
let gate have a flag that is purely visual? -> horizontal/vertical
codearea controller listens to view
gate make path as dark as other paths!
instead of removing the spawn redraw it without the glow

5.10.
tutorial opening screen if tutprogress == -1
endless loop -> popup and reset!
remove spawn when there are no knight tokens left

4.10.
end goal always to unlock the exit? <- the wizard wants to escape, not the knights! => no open tag!
knight icons left of map
button to load best code yet (with which you completed a specific level)
LevelOverviewPane: replace level descriptions with other information like max knights, level_size and requirements for certain star ratings!
Fullscreen mode
let randInt take variables!
data: tutorial progress
variable assignment causes nullpointer! + what if variables get variables as value (no recursion yet?)
CodeParser TestForCorrectValueType!

2.10.
variables must not be named LEFT, RIGHT, AROUND, EAST, WEST, NORTH, SOUTH, KEY
DIRECTION: NORTH, SOUTH, WEST, EAST
Booleans and Expressions -> find better solution! (merge the 2 so they work together!)
dropItem() method

1.10.
allow booleans with other value than true or false!
tutorialDeletion in view as a case!!
tutorialtext in level descriptions -> make editable! (tutorial textarea in texteditor but editable)
Back btn and others should be inactive when game is running!

27.09.
Make spellbook open on request and dont always show it!
find place for show spellbook button, tutorial textarea + forward and backwards buttons -> stackpane??
show tutorial levels exclusively in tutorial (??? maybe its okay to show in play scene?)
display Levelname in Playmode!
changing level name in editor -> extra button because name of file should be changed and the entry in data and requiredlevel also!!

26.09.
TODO:[might still be an issue]adjust to codeAreacontroller no longer "null"! Instead ask for isEmpty() [do controller and model search for null tests!]
make codefield scrollable! no 2 blocks!!
atm you cannot edit the intelligent codefield via clicks without have used arrow keys or enter etc. beforehand!

23.09.
Levelname in VBOX over level!
Spellbook field right of the map
Knight <variable name> = new Knight(<Direction>); <- tooltips
github

21.09.
see controller: Line 110 TODO???

19.09:
indexing
reload lvl btn? (why again?)
save player code upon finishing a level? -> store in data!
reset score for a level in editor
visualize knights left
update levellist of "Play" everytime? (because deleting in editor does not delete in "Play"!)