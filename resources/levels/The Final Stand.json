{"maxKnights":2,"isTutorial":true,"requiredLevels":[],"turnsToStars":[50,46],"ai":["Skeleton skelly = new Skeleton(NORTH,2);","Skeleton skelvin = new Skeleton(EAST,3);","Army skells = new Army(skelly,skelvin);","TurnDirection dir = RIGHT;","int turns = 0;","boolean bItem = !skells.targetsItem(NONE);","boolean b = !skells.targetsEntity(NONE);","while(true) {","if (skells.canMove()) {","skells.move();","}","else if (b || bItem) {","skells.executeIf(b||bItem,attack(),move());","}","else {","skells.executeIf(skells.canMove(),move(),turn(dir));","turns = turns + 1;","}","if (turns > 1 && turns < 4) {","dir = LEFT;","}","else {","dir = RIGHT;","}","}"],"index":10,"tutorialEntries":["Now here we have it! The final test! And your final lesson!\nWith the data type Army you can now command multiple Knights at once! Have a look at what your enemy did within his script.","In order to decide between two alternatives without an if-Statement, Knights and Armies have a special method: executeIf(<condition>,<then-command>,<else-command>)","If you enter a condition concerning an Army, the condition is evaluated individually for every Entity in that Army! If you instead enter that condition in an if-Statement, it returns whether the condition is true for ALL entities in the Army!","The syntax: <army name>.executeIf(<condition>,<then command>,<else command>)\nmeans that if <condition> is met for entity A, entity A will try to execute <then command>, otherwise the <else command>.","Tip: To differentiate between your Knights you can use the isLooking(<Direction>) method. For example with two knights lancelot and arthur:\nArmy army = new Army(lancelot,arthur);\narmy.executeIf(army.canMove(),move(),\nturn(LEFT));","You can also use variables:\nCommand cmd = useItem();\nboolean isExit = lancelot.targetsCell(EXIT);\nlancelot.executeIf(isExit,cmd,wait());\n","You should now experiment and try to solve this level. If you need help check the spellbook first! If you can't solve it read further...","You will first need to make a Knight looking towards north, then the other towards east. Let both move() until the first one is looking at a pressure plate. Let him take a step and wait while the other one is keeps moving. Let both collect their items.","I would suggest to use two while-loops. End the first one as soon as the lower Knight is looking at dirt and the upper one should look South standing at the beginning of the hall towards the key.","Now let them both move and use their Items until the upper one collects the key..."],"map":[["wall","wall","wall","wall","wall","empty","empty","empty","empty","empty","wall","wall","wall","wall","wall"],["wall","path","path","path","wall","empty","empty","empty","empty","empty","wall",{"id":3,"content":"enemy_spawn"},"path","path","wall"],["wall","path","wall","path","wall","wall","wall","wall","wall","wall","wall","wall","wall","path","wall"],["wall","path","wall","path","path","path","path","path","path","path","path","path","path","path","wall"],["wall","path","wall","path","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall"],["wall",{"item":"sword","content":"path"},"wall","path","wall","path","path","path","wall","path","path","path","wall",{"id":1,"content":"pressure_plate"},"wall"],["wall","path","wall","path","wall","path","wall","path","wall","path","wall","path","wall","dirt","wall"],["wall","path","wall","path","wall",{"id":2,"content":"enemy_spawn"},"wall","path","wall","path","wall","path","wall","dirt","wall"],["wall","path","wall","path","wall","wall","wall","path","wall","path","wall","path","wall","dirt","wall"],["wall",{"id":0,"content":"pressure_plate"},"wall","path","wall","wall","wall","path","path","path","wall","path","wall","dirt","wall"],["wall","path","wall","path","wall","exit","wall","wall","wall","wall","wall","path","wall","dirt","wall"],["wall","path","wall",{"item":"key","content":"path"},{"linkedIds":[1],"content":"path"},"path",{"linkedIds":[1],"flags":["inverted"],"content":"gate"},"path","path","path","path","path","wall","dirt","wall"],["wall","path","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","dirt","wall"],["wall","spawn","path","path","path",{"linkedIds":[0],"content":"gate"},"path","path","path",{"item":"shovel","content":"path"},"path","path","path","path","wall"],["wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall"]],"locToStars":[50,46]}