{"maxKnights":1,"isTutorial":true,"requiredLevels":[],"turnsToStars":[95,93],"ai":["Skeleton skelly= new Skeleton(SOUTH);","boolean hasTurned = false;","for(int i = 0;i < 7;i = i + 1;) {","skelly.move();","}","skelly.turn(LEFT);","skelly.move();","if (skelly.targetsEntity()) {","skelly.attack();","}","skelly.move();","skelly.turn(LEFT);","while(true) {","if (skelly.targetIsDanger()) {","skelly.wait();","}","else if (skelly.canMove()) {","skelly.move();","hasTurned = false;","}","else if (skelly.targetsItem() || skelly.targetsEntity()) {","skelly.attack();","}","else if (!hasTurned) {","skelly.turn(RIGHT);","hasTurned = true;","}","else {","skelly.turn(AROUND);","}","}"],"index":9,"tutorialEntries":["Now this is a real challenge! We need to combine everything we learned so far and even go a step beyond! First look at the script of your enemy and try to understand, how it works.","This level is filled with traps. There is exactly one point in time when you can walk across them safely. With the method \"targetIsDanger()\" a Knight can ask, whether the trap in front of him will kill him, if he steps on it!","To stop that from happening you just need to \"wait()\" it out just as our enemy does in his script. In order to beat this level we have to write a script that navigates our Knight faster through this maze than our enemy! For now you can adapt the enemy's script to your situation and see what happens.","If you already know how to imrpove it you can test your idea and don't need to see my next message...","We need to always turn exactly in the right direction immediately. To achieve this we can use an integer variable that counts how many times we have turned. To declare this variable write: int <var name> = 0;","Everytime we call a \"turn()\" method we want to increase this number by writing: <var name> = <var name> + 1;\nor just\n<var name>++;","To test whether our variable is smaller than a number or larger than another we need boolean operators! There are three:","- a || b means both or one of either a or b are true\n- a && b means both a and b are true\n- !a means a is wrong\nWe can combine them using '(' and ')'!\n- !(a && b) || c means not both a and b are true or c is true","If you have trouble remembering that, hover your mouse over the <condition>s in your spellbook! If you can't solve it yourself, I'll tell you the solution in the next message...","Where our enemy wrote:\n\"else if (!hasTurned) {\"\nWe want to write:\n\"else if (turns < 4 || (turns > 6 && turns <9)) {\"","Also we need to make sure that whenever we call turn(RIGHT) and turn(LEFT), we increase our integer via: <var name>++;\nIf you're still having trouble maybe go back to a previous message or compare to your enemy's script!"],"map":[["wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall"],["wall","enemy_spawn","wall","path","path","path","path","path","path","trap","path","path","trap","path","wall"],["wall","path","wall","path","wall","wall","wall","wall","wall","wall","wall","wall","wall","path","wall"],["wall","path","wall","path","path","path","path","path","wall","path","trap","path","wall",{"flags":["armed"],"content":"trap"},"wall"],["wall","path","wall","path","path","path","path","path","wall","path","wall","path","path","path","wall"],["wall","path","wall","path","path","path","path","path","wall","path","wall","wall","wall","wall","wall"],["wall","path","wall","path","path","path","path","path","wall","path","trap","path",{"flags":["preparing"],"content":"trap"},"path","wall"],["wall","path","wall","path","path","path","path","path","wall","wall","wall","wall","wall","path","wall"],["wall","path","path","path","path","path","path","path","path","path","path","spawn","wall",{"item":"key","content":"path"},"wall"],["wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","path","wall"],["wall","path","path",{"flags":["preparing"],"content":"trap"},"path","trap","path","path","path",{"flags":["preparing"],"content":"trap"},"path","path","trap","path","wall"],["wall","trap","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall"],["wall","path","path","trap","path","path","path","path","trap","path","path","path","path","exit","wall"],["wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall"]],"locToStars":[32,28]}