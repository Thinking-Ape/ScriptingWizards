{"maxKnights":1,"turnsToStars":[68,66],"reruns":1,"id":53,"tutorialEntries":["Great! Besides conditions there is another important tool, that will help to reduce the amount of code you have to write significantly:\n\"Loop Statements\"!","Similar to \"Conditional Statements\" they also ask for a <condition>, but they don't differentiate between different courses of action and will run as long as the <condition> is met instead.","Our first type of \"Loop Statement\" is the while-Statement:\nwhile(<condition>) {\n\t<consequent>\n}\n","We want to repeat the Knights actions until he reaches the EXIT! For that write:\n\twhile(!lancelot.targetsCell(EXIT)) {\nPay attention to the \"!\" infront of \"lancelot.targetsCell(EXIT)\". It means the opposite of whatever comes after it!","This means that the code inside the \"while\" loop will be repeated until the Knight is targeting the EXIT. Inside the \"while\" loop you can now enter a new \"if\" Statement.","It should check the following condition:\n<knight name>.canMove()\nThis is wrong if he stands before a WALL!\nCan you already solve this puzzle? Note: Replace <knight name> with the name of your Knight!","Inside your while-Statement you need this:\n\tif (<knight name>.canMove()){\n\t\t<knight name>.move();\n\t}","else {\n\t<knight name>.turn(RIGHT);\n}\nAnd as the very last Statement, outside of the while loop:\n<knight name>.useItem();"],"map":[["wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall"],["wall","spawn",{"item":"key","content":"path"},"path","path","path","path","path","path","path","path","path","wall"],["wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","path","wall"],["empty","empty","wall","path","path","path","path","path","path","path","wall","path","wall"],["empty","empty","wall","path","wall","wall","wall","wall","wall","path","wall","path","wall"],["empty","empty","wall","path","wall","path","path","path","wall","path","wall","path","wall"],["empty","empty","wall","path","wall","path","wall","exit","wall","path","wall","path","wall"],["empty","empty","wall","path","wall","path","wall","wall","wall","path","wall","path","wall"],["empty","empty","wall","path","wall","path","path","path","path","path","wall","path","wall"],["empty","empty","wall","path","wall","wall","wall","wall","wall","wall","wall","path","wall"],["empty","empty","wall","path","path","path","path","path","path","path","path","path","wall"],["empty","empty","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall"]],"locToStars":[11,9]}