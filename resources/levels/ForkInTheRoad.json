{"maxKnights":1,"requiredLevels":["TurnRightToWin"],"isTutorial":true,"turnsToStars":[12,10],"ai":["Skeleton skelly = new Skeleton(EAST);"],"index":5,"tutorialEntries":["Another thing you will need upon your way to become a master of Java are \"Conditional Statements\". These consist of the following magical formulas:","if ( <condition> ) {\n\t<consequent>\n}\nelse {\n\t<alternative>\n}","Note that the '<' and '>' characters are never part of the code! Instead they symbolize a placeholder for what you are supposed to write here!","A <condition> is something that is either true or false. You can actually enter \"true\" or \"false\" to test this kind of statements and see what happens. For our purposes we want to test, whether a cell contains a Skeleton or not.","To do this write:\n\"if(<knight name>.targetsEntity(SKELETON)) {\"\nand then press Enter. A '}' will be added automatically!","You can now enter what it is you want to happen, if there is a Skeleton in front of you (I would turn around in this case and take another route). After you have finished what should happen in this case, you can specify what should happen if there is no Skeleton.","To do that write below the '}' of the if-Statement (create a new Codefield by pressing enter after selecting the '}'):\nelse {","When you are done if the else part you can test your code. Be reminded that every thing you learn here is automatically added to your spellbook!","Also note that there is the possibility to write an else-if-Statement like this:\n\telse if (<condition>) {\nTo differentiate between different possible alternatives!"],"map":[["empty","empty","wall","wall","wall","wall","wall"],["wall","wall","wall","enemy_spawn","path","exit","wall"],["wall","spawn",{"item":"key","content":"path"},"path","wall","wall","wall"],["wall","wall","wall","enemy_spawn","path","exit","wall"],["empty","empty","wall","wall","wall","wall","wall"]],"locToStars":[18,16]}