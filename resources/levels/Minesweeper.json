{"maxKnights":2,"turnsToStars":[26,24],"reruns":3,"ai":["int i = randInt(0,2);","Skeleton skelly = new Skeleton(NORTH,i);","skelly.move();","while(true) {","if (skelly.targetsEntity() || (skelly.targetsItem())) {","skelly.attack();","}","else {","skelly.wait();","}","}"],"id":58,"tutorialEntries":["Sometimes we can also combine for and while loops in a meaningful way. Can you already see what the enemy script does in this level?","A Skeleton will spawn randomly at one of those 3 ENEMY_SPAWNs. It will then take a step forward, opening the corresponding gate. With the Method \"isAlive()\" you can test, whether a Knight is still alive. Can you already solve this puzzle?","First you should spawn a Knight and make him drop the KEY on top of the SPAWN so the next Knight can pick it up easily. Then you should let him move for as long as he is alive with a while-Loop. Also you should count the steps he is taking.","For that declare a new variable: \"int steps = 0;\" above the while-Loop. Don't put it inside or else it will reset everytime! Inside the while-Loop you will want to increase the Variable: \"steps = steps + 1;\"","Then you can spawn a second Knight outside of the while-Loop. He should now take as many steps as the first Knight took (the first step of the first Knight was not counted).\nYou can do this with the help of a for-Loop:","for(int i = 0;i < steps; i++) {\n<second knight name>.move();\n}","Try the code and see where the second Knight ends up. You can then add the missing statements after the for-Loop..."],"map":[["wall","wall","wall","wall","wall","wall","wall","wall","empty","empty","empty","empty"],["wall","wall","exit","wall","exit","wall","exit","wall","empty","empty","empty","empty"],["wall","wall",{"linkedIds":[4],"flags":["turned"],"content":"gate"},"wall",{"linkedIds":[3],"flags":["turned"],"content":"gate"},"wall",{"linkedIds":[5],"flags":["turned"],"content":"gate"},"wall","empty","empty","empty","empty"],["wall","wall",{"id":6,"content":"pressure_plate"},"wall",{"id":7,"content":"pressure_plate"},"wall",{"id":8,"content":"pressure_plate"},"wall","empty","empty","empty","empty"],["wall","wall",{"linkedIds":[6],"flags":["inverted","turned"],"content":"gate"},"wall",{"linkedIds":[7],"flags":["inverted","turned"],"content":"gate"},"wall",{"linkedIds":[8],"flags":["inverted","turned"],"content":"gate"},"wall","wall","wall","wall","wall"],["wall","path","path","path","path","path","path","path","path",{"item":"key","content":"path"},"spawn","wall"],["wall",{"id":4,"content":"pressure_plate"},"wall",{"id":3,"content":"pressure_plate"},"wall",{"id":5,"content":"pressure_plate"},"wall","wall","wall","wall","wall","wall"],["wall",{"id":2,"content":"enemy_spawn"},"wall",{"id":1,"content":"enemy_spawn"},"wall",{"id":0,"content":"enemy_spawn"},"wall","empty","empty","empty","empty","empty"],["wall","wall","wall","wall","wall","wall","wall","empty","empty","empty","empty","empty"]],"locToStars":[24,20]}