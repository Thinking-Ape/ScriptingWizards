{"maxKnights":1,"isTutorial":true,"requiredLevels":[],"turnsToStars":[50,47],"ai":[],"id":8,"tutorialEntries":["If you didnt get 3 Stars: The best solution is a bit tricky and requires you to insert one for-Loop into another for-Loop. But don't worry, you don't always have to get 3 Stars!","But for loops aren't always the fastest way to solve a problem! Sometimes we don't care about how often exactly we want something to happen but only under what circumstances it is supposed to happen!","For example in this particular Level we want to move our Knight through the labyrinth for as long as they don't see a KEY in front of them!","For that we write:\n\"while(!<knight name>.targetsItem(KEY)) {\"\nReminder: !condition is always the opposite of the condition","Just as with the last while loop, we will need a condition like this:\n\"if(<knight name>.canMove()) {\"\nBut this time something is different! Try and see what happens , if you let your Knight turn left every time he can't move...","To help us with this problem, we will need to declare an \"int\" Variable to help us count how often our Knight has already turned! You can think of \"int\" as a whole number.","Now create a new line above your while Loop and write:\n\"int turns = 0;\"\nEvery time your Knight turns, we want to increase this number, by typing:\n\"turns++;\" or \"turns = turns + 1;\"","We can now decide that as long as \"turns < 3\" we want to turn left, else we want to turn right. The best way to do this is to declare yet another Variable:\n\"TurnDirection direction = LEFT;\"\nAnd call: \"<knight name>.turn(direction);\"","As soon as turns reaches 3, we can change the value of direction by writing:\n\"direction = RIGHT;\"\nIn another if-Statement below \"turns = turns +1;\" inside your first else-Statement!","There are multiple ways to check whether turns has reached 3:\n- turns == 3 (a single \"=\" would change the value of turns to 3)\n- turns >= 3 (which is true if turns is 3 or greater)","- turns <= 3 (which is true if turns is 3 or smaller)\n- turns > 2 (which is true if turns is greater than 2)","Now to solve the Level we need some more code outside of your while Loop! Just select the last \"}\" and press ENTER in order to add the required spells!\nAlso don't forget to check your spellbook for new entries after you completed this level!"],"map":[["wall","wall","wall","wall","wall","wall","wall","wall","wall","wall"],["wall","path","path","path","path","wall","path","path","path","wall"],["wall","path","wall","wall","path","wall","path","wall","path","wall"],["wall","path","wall","exit","path","wall","path","wall","path","wall"],["wall","path","wall","wall",{"item":"key","content":"path"},"wall","path","wall","path","wall"],["wall","path","wall","wall","wall","wall","path","wall","path","wall"],["wall","path","path","path","path","path","path","wall","path","wall"],["wall","wall","wall","wall","wall","wall","wall","wall","path","wall"],["wall","spawn","path","path","path","path","path","path","path","wall"],["wall","wall","wall","wall","wall","wall","wall","wall","wall","wall"]],"locToStars":[22,18]}