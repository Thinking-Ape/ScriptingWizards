{"maxKnights":1,"isTutorial":true,"requiredLevels":[],"turnsToStars":[95,93],"ai":["Skeleton skelly = new Skeleton(SOUTH);","boolean hasTurned = false;","for(int i = 0;i < 7;i = i + 1) {","skelly.move();","}","skelly.turn(LEFT);","skelly.move();","if (skelly.targetsEntity()) {","skelly.attack();","}","skelly.move();","skelly.turn(LEFT);","while(skelly.isAlive()) {","if (skelly.targetIsDanger()) {","skelly.wait();","}","else if (skelly.canMove()) {","skelly.move();","hasTurned = false;","}","else if (skelly.targetsItem() || skelly.targetsEntity()) {","skelly.attack();","}","else if (!hasTurned) {","skelly.turn(RIGHT);","hasTurned = true;","}","else {","skelly.turn(AROUND);","}","}"],"id":10,"tutorialEntries":["Now this is a real challenge! We need to combine most of what we have learned so far and even go a step beyond! First look at the script of your enemy and try to understand, how it works.","Just like in the last level, there are a lot of traps involved. In order to beat this level you will have to write a script that navigates your Knight faster through this maze than the Skeleton is doing it!","You can use big parts of the last script!\nIf you already know how to solve the level, you can test your idea and don't need to see my next messages...","We always have to turn immediately in the right direction! To achieve this we can use an integer variable that counts how many times we have turned just like before!","To test whether our variable is smaller or larger than a number we need boolean operators! There are three:\n- a || b means both or one of a or b are true\n- a && b means both a and b are true\n- !a means a is wrong","We can combine them using '(' and ')':\nboolean Test = !(a && b) || c ;\nTest will be true if not both a and b are true or if c is true","If you have trouble remembering that, hover your mouse over the <condition>s in your spellbook! If you can't solve it yourself, I'll tell you the solution in the next message...","Where our enemy wrote:\n\"else if (!hasTurned) {\"\nWe want to write:\n\"else if (turns < 4 || (turns > 6 && turns <9)) {\"\nAnd instead of turning AROUND in the else part we want to turn LEFT!","Also we need to make sure that whenever we call turn(RIGHT) and turn(LEFT) inside our while loop, we increase our integer via: <var name>++;\nYou should not count the first time you turned right after the for loop!"],"map":[["wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall"],["wall","enemy_spawn","wall","path","path","path","path","path","path","trap","path","path","trap","path","wall"],["wall","path","wall","path","wall","wall","wall","wall","wall","wall","wall","wall","wall","path","wall"],["wall","path","wall","path","path","path","path","path","wall","path","trap","path","wall",{"flags":["armed"],"content":"trap"},"wall"],["wall","path","wall","path","path","path","path","path","wall","path","wall","path","path","path","wall"],["wall","path","wall","path","path","path","path","path","wall","path","wall","wall","wall","wall","wall"],["wall","path","wall","path","path","path","path","path","wall","path","trap","path",{"flags":["preparing"],"content":"trap"},"path","wall"],["wall","path","wall","path","path","path","path","path","wall","wall","wall","wall","wall","path","wall"],["wall","path","path","path","path","path","path","path","path","path","path","spawn","wall",{"item":"key","content":"path"},"wall"],["wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","path","wall"],["wall","path","path",{"flags":["preparing"],"content":"trap"},"path","trap","path","path","path",{"flags":["preparing"],"content":"trap"},"path","path","trap","path","wall"],["wall","trap","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall"],["wall","path","path","trap","path","path","path","path","trap","path","path","path","path","exit","wall"],["wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall","wall"]],"locToStars":[28,26]}